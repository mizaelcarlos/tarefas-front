{"remainingRequest":"C:\\wamp64\\www\\tarefas-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\wamp64\\www\\tarefas-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\wamp64\\www\\tarefas-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\tarefas-front\\src\\components\\Tarefas.vue?vue&type=template&id=5f606fb8&","dependencies":[{"path":"C:\\wamp64\\www\\tarefas-front\\src\\components\\Tarefas.vue","mtime":1625435256718},{"path":"C:\\wamp64\\www\\tarefas-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\tarefas-front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\tarefas-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\tarefas-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAiYXBwIiB9IH0sIFsKICAgIF92bS5fbSgwKSwKICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LCBbCiAgICAgIF9jKAogICAgICAgICJmb3JtIiwKICAgICAgICB7CiAgICAgICAgICBvbjogewogICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgcmV0dXJuIF92bS5zYWx2YXIuYXBwbHkobnVsbCwgYXJndW1lbnRzKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygibGFiZWwiLCBbX3ZtLl92KCJUaXR1bG8iKV0pLAogICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGFyZWZhLnRpdHVsbywKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YXJlZmEudGl0dWxvIgogICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBwbGFjZWhvbGRlcjogIlRpdHVsbyIgfSwKICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS50YXJlZmEudGl0dWxvIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnRhcmVmYSwgInRpdHVsbyIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJsYWJlbCIsIFtfdm0uX3YoIkRlc2NyacOnw6NvIildKSwKICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnRhcmVmYS5kZXNjcmljYW8sCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGFyZWZhLmRlc2NyaWNhbyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgcGxhY2Vob2xkZXI6ICJEZXNjcmnDp8OjbyIgfSwKICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS50YXJlZmEuZGVzY3JpY2FvIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnRhcmVmYSwgImRlc2NyaWNhbyIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJsYWJlbCIsIFtfdm0uX3YoIkZlaXRhIildKSwKICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnRhcmVmYS5mZWl0YSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YXJlZmEuZmVpdGEiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIsIHBsYWNlaG9sZGVyOiAiVGFyZWZhIGNvbmNsdcOtZGE/IiB9LAogICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnRhcmVmYS5mZWl0YSB9LAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS50YXJlZmEsICJmZWl0YSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJsYWJlbCIsIFtfdm0uX3YoIlRpcG8iKV0pLAogICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGFyZWZhLnRpcG9faWQsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGFyZWZhLnRpcG9faWQiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBhdHRyczogeyB0eXBlOiAibnVtYmVyIiwgcGxhY2Vob2xkZXI6ICJUaXBvIiB9LAogICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnRhcmVmYS50aXBvX2lkIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnRhcmVmYSwgInRpcG9faWQiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSksCiAgICAgICAgICBfdm0uX20oMSkKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJ0YWJsZSIsIFsKICAgICAgICBfdm0uX20oMiksCiAgICAgICAgX2MoCiAgICAgICAgICAidGJvZHkiLAogICAgICAgICAgX3ZtLl9sKF92bS50YXJlZmFzLCBmdW5jdGlvbih0YXJlZmEpIHsKICAgICAgICAgICAgcmV0dXJuIF9jKCJ0ciIsIHsga2V5OiB0YXJlZmEuaWQgfSwgWwogICAgICAgICAgICAgIF9jKCJ0ZCIsIFtfdm0uX3YoX3ZtLl9zKHRhcmVmYS50aXR1bG8pKV0pLAogICAgICAgICAgICAgIF9jKCJ0ZCIsIFtfdm0uX3YoX3ZtLl9zKHRhcmVmYS5kZXNjcmljYW8pKV0pLAogICAgICAgICAgICAgIHRhcmVmYS5mZWl0YSA9PSAwCiAgICAgICAgICAgICAgICA/IF9jKCJ0ZCIsIFtfdm0uX3YoIk7Do28iKV0pCiAgICAgICAgICAgICAgICA6IF9jKCJ0ZCIsIFtfdm0uX3YoIlNpbSIpXSksCiAgICAgICAgICAgICAgX2MoInRkIiwgW192bS5fdihfdm0uX3MoX3ZtLnRpcG9bIm5vbWUiXSkpXSksCiAgICAgICAgICAgICAgX2MoInRkIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ3YXZlcy1lZmZlY3QgYnRuLXNtYWxsIGJsdWUgZGFya2VuLTEiLAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZWRpdGFyKHRhcmVmYSkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtYXRlcmlhbC1pY29ucyIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJjcmVhdGUiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIndhdmVzLWVmZmVjdCBidG4tc21hbGwgcmVkIGRhcmtlbi0xIiwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlbW92ZXIodGFyZWZhKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1hdGVyaWFsLWljb25zIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoImRlbGV0ZV9zd2VlcCIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICB9KSwKICAgICAgICAgIDAKICAgICAgICApCiAgICAgIF0pCiAgICBdKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJuYXYiLCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibmF2LXdyYXBwZXIgYmx1ZSBkYXJrZW4tMSIgfSwgWwogICAgICAgIF9jKCJhIiwgeyBzdGF0aWNDbGFzczogImJyYW5kLWxvZ28gY2VudGVyIiwgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJDb25zdWx0YSBUYXJlZmFzIikKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImJ1dHRvbiIsIHsgc3RhdGljQ2xhc3M6ICJ3YXZlcy1lZmZlY3Qgd2F2ZXMtbGlnaHQgYnRuLXNtYWxsIiB9LCBbCiAgICAgIF92bS5fdigiU2FsdmFyIiksCiAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogIm1hdGVyaWFsLWljb25zIGxlZnQiIH0sIFtfdm0uX3YoInNhdmUiKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygidGhlYWQiLCBbCiAgICAgIF9jKCJ0ciIsIFsKICAgICAgICBfYygidGgiLCBbX3ZtLl92KCJUaXR1bG8iKV0pLAogICAgICAgIF9jKCJ0aCIsIFtfdm0uX3YoIkRlc2NyacOnw6NvIildKSwKICAgICAgICBfYygidGgiLCBbX3ZtLl92KCJDb25jbHXDrWRhPyIpXSksCiAgICAgICAgX2MoInRoIiwgW192bS5fdigiVGlwbyIpXSksCiAgICAgICAgX2MoInRoIiwgW192bS5fdigiT1DDh8OVRVMiKV0pCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}